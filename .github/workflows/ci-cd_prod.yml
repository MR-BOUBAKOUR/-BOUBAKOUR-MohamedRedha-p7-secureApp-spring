name: TradingApp CI/CD - PR to main (heavy)

on:
  pull_request:
    branches: [ main ]

env:
  DOCKER_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DB_NAME }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven and Run Unit Tests
        run: mvn -B package --file pom.xml

      - name: Run Integration Tests
        run: mvn failsafe:integration-test

      - name: Generate JaCoCo Coverage Report
        run: mvn jacoco:report

      - name: Generate JavaDocs
        run: mvn javadoc:javadoc

      - name: Upload JaCoCo Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/

      - name: Upload JavaDocs
        uses: actions/upload-artifact@v4
        with:
          name: javadocs
          path: target/reports/apidocs/

      - name: Prepare GitHub Pages content
        run: |
          mkdir -p gh-pages-build
          cp -r target/site/jacoco  gh-pages-build/jacoco
          cp -r target/reports/apidocs gh-pages-build/javadocs

      - name: Deploy JavaDocs and JaCoCo to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: gh-pages-build

      # Docker build and push

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Production Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_REPO }}:latest
            ${{ env.DOCKER_REPO }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64